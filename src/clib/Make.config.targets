#=======================================================================
#
# FILE:        Make.config.targets
#
# SUMMARY:     Make targets for managing configuration settings
#
# AUTHOR:      James Bordner (jobordner@ucsd.edu)
#
# DATE:        2007-02-21
#
# DESCRIPTION  See 'gmake help-config' for definitive description of targets
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
help-config:
	@echo "========================================================================"
	@echo "   ENZO CONFIGURATION HELP"
	@echo "========================================================================"
	@echo
	@echo "NUMERICAL PARAMETERS"
	@echo
	@echo "   Set maximum subgrids"
	@echo
	@echo "      gmake max-subgrids-###"
	@echo
	@echo "   Set maximum baryon fields"
	@echo
	@echo "      gmake max-baryons-###"
	@echo
	@echo "   Set maximum tasks per node"
	@echo
	@echo "      gmake max-tasks-per-node-###"
	@echo
	@echo "   Set initial memory pool size (in number of photons)"
	@echo
	@echo "      gmake memory-pool-###"
	@echo
	@echo
	@echo "CONFIGURATION SETTINGS"
	@echo
	@echo "   Set integer size"
	@echo
	@echo "      gmake integers-32"
	@echo "      gmake integers-64"
	@echo
	@echo "   Set floating-point precision"
	@echo
	@echo "      gmake precision-32"
	@echo "      gmake precision-64"
	@echo
	@echo "   Set particle position precision"
	@echo
	@echo "      gmake particles-32"
	@echo "      gmake particles-64"
	@echo "      gmake particles-128"
	@echo
	@echo "   Set IO precision"
	@echo
	@echo "      gmake io-32"
	@echo "      gmake io-64"
	@echo
	@echo "   Set whether to use MPI"
	@echo
	@echo "      gmake use-mpi-yes"
	@echo "      gmake use-mpi-no"
	@echo
	@echo "   Set optimization/debug/warning levels"
	@echo
	@echo "      gmake opt-warn"
	@echo "      gmake opt-debug"
	@echo "      gmake opt-cudadebug  (cuda device software emulation)"
	@echo "      gmake opt-high"
	@echo "      gmake opt-aggressive"
	@echo

#-----------------------------------------------------------------------

show-flags:
	@echo
	@echo "CPP = `which $(CPP)`"
	@echo "CC  = `which $(CC)`"
	@echo "CXX = `which $(CXX)`"
	@echo "FC  = `which $(FC)`"
	@echo "F90 = `which $(F90)`"
	@echo "LD  = `which $(LD)`"
	@echo ""
	@echo "DEFINES = $(DEFINES)"
	@echo ""
	@echo "INCLUDES = $(INCLUDES)"
	@echo ""
	@echo "CPPFLAGS = $(CPPFLAGS)"
	@echo "CFLAGS   = $(CFLAGS)"
	@echo "CXXFLAGS = $(CXXFLAGS)"
	@echo "FFLAGS   = $(FFLAGS)"
	@echo "F90FLAGS = $(F90FLAGS)"
	@echo "LDFLAGS  = $(LDFLAGS)"
	@echo ""
	@echo "LIBS     = $(LIBS)"
	@echo

#-----------------------------------------------------------------------

show-config:
	@echo
	@echo "   MACHINE: $(MACH_TEXT)"
	@echo "   MACHINE-NAME: $(CONFIG_MACHINE)"
	@echo
	@echo "   CONFIG_PRECISION  [precision-{32,64}]                     : $(CONFIG_PRECISION)"
	@echo "   CONFIG_PARTICLES  [particles-{32,64,128}]                 : $(CONFIG_PARTICLES)"
	@echo "   CONFIG_INTEGERS  [integers-{32,64}]                       : $(CONFIG_INTEGERS)" 
	@echo "   CONFIG_IO  [io-{32,64}]                                   : $(CONFIG_IO)"
	@echo "   CONFIG_USE_MPI  [use-mpi-{yes,no}]                        : $(CONFIG_USE_MPI)"
	@echo "   CONFIG_OPT  [opt-{warn,debug,cudadebug,high,aggressive}]  : $(CONFIG_OPT)"

	@echo

#-----------------------------------------------------------------------

.PHONY: suggest-clean
suggest-clean:
	@echo
	@echo " *** Execute 'gmake clean' before rebuilding executables ***"
	@echo

#-----------------------------------------------------------------------

show-version:
	@echo
	@echo "Mercurial Branch   `$(SVN) identify -b`"
	@echo "Mercurial Revision `$(SVN) identify -i`"
	@echo

#-----------------------------------------------------------------------

show-diff:
	@$(SVN) diff

#-----------------------------------------------------------------------
.PHONY: default

default:
	@rm -f $(MAKE_CONFIG_OVERRIDE)
	@touch $(MAKE_CONFIG_OVERRIDE)
	@$(MAKE) show-config
	@$(MAKE) suggest-clean

#-----------------------------------------------------------------------

machine-%: suggest-clean
	@if [ -e $(ENZO_DIR)/Make.mach.$* ] || [ -e $(HOME)/.enzo/Make.mach.$* ]; then \
           tmp=.config.temp; \
           grep -v CONFIG_MACHINE $(MAKE_CONFIG_MACHINE) > $${tmp}; \
           mv $${tmp} $(MAKE_CONFIG_MACHINE); \
           echo "CONFIG_MACHINE = $*" >> $(MAKE_CONFIG_MACHINE); \
	   $(MAKE)  show-config | grep MACHINE; \
	else \
           echo; \
	   echo "   No such machine file "'"'"Make.mach.$*"'"'; \
           echo; \
	   exit 1; \
        fi; \
	echo

#-----------------------------------------------------------------------

load-config-%:
	@if [ -e $(HOME)/.enzo/Make.settings.$* ]; then \
           @tmp=.config.temp; \
	   cat $(HOME)/.enzo/Make.settings.$* > $(MAKE_CONFIG_OVERRIDE); \
           echo; \
           echo "   CONFIG SETTINGS: $*"; \
	   $(MAKE) show-config; \
	   $(MAKE) suggest-clean; \
	elif [ -e Make.settings.$* ]; then \
           @tmp=.config.temp; \
	   cat Make.settings.$* > $(MAKE_CONFIG_OVERRIDE); \
           echo; \
           echo "   CONFIG SETTINGS: $*"; \
	   $(MAKE) show-config; \
	   $(MAKE) suggest-clean; \
        else \
           echo; \
           echo "   No such settings file "'"'"$(HOME)/.enzo/Make.settings.$*"'"'; \
           echo; \
	   exit 1; \
        fi;

#-----------------------------------------------------------------------

save-config-%:
	@tmp=.config.temp; \
	cat $(MAKE_CONFIG_OVERRIDE) > $(HOME)/.enzo/Make.settings.$*; \
	echo; \
	echo "   Settings saved to $(HOME)/.enzo/Make.settings.$*."; \
	echo "   Type "'"'"$(MAKE) load-config-$*"'"'" to reload settings."; \
	echo;

#-----------------------------------------------------------------------

VALID_INTEGERS = integers-32 integers-64
.PHONY: $(VALID_INTEGERS)

integers-32: CONFIG_INTEGERS-32
integers-64: CONFIG_INTEGERS-64
integers-%:
	@printf "\n\tInvalid target: $@\n\n\tValid targets: [$(VALID_INTEGERS)]\n\n"
CONFIG_INTEGERS-%: suggest-clean
	@tmp=.config.temp; \
	grep -v CONFIG_INTEGERS $(MAKE_CONFIG_OVERRIDE) > $${tmp}; \
	mv $${tmp} $(MAKE_CONFIG_OVERRIDE); \
	echo "CONFIG_INTEGERS = $*" >> $(MAKE_CONFIG_OVERRIDE); \
	$(MAKE)  show-config | grep CONFIG_INTEGERS; \
	echo

#-----------------------------------------------------------------------

VALID_PRECISION = precision-32 precision-64
.PHONY: $(VALID_PRECISION)

precision-32: CONFIG_PRECISION-32
precision-64: CONFIG_PRECISION-64
precision-%:
	@printf "\n\tInvalid target: $@\n\n\tValid targets: [$(VALID_PRECISION)]\n\n"
CONFIG_PRECISION-%: suggest-clean
	@tmp=.config.temp; \
        grep -v CONFIG_PRECISION $(MAKE_CONFIG_OVERRIDE) > $${tmp}; \
        mv $${tmp} $(MAKE_CONFIG_OVERRIDE); \
        echo "CONFIG_PRECISION = $*" >> $(MAKE_CONFIG_OVERRIDE); \
	$(MAKE)  show-config | grep CONFIG_PRECISION; \
	echo

#-----------------------------------------------------------------------

VALID_PARTICLES = particles-32 particles-64 particles-128
.PHONY: $(VALID_PARTICLES)
.PHONY: particles-%

particles-32:  CONFIG_PARTICLES-32
particles-64:  CONFIG_PARTICLES-64
particles-128: CONFIG_PARTICLES-128
	@printf "\nNote that star formation does not work with this option.\n\n"
particles-%:
	@printf "\n\tInvalid target: $@\n\n\tValid targets: [$(VALID_PARTICLES)]\n\n"
CONFIG_PARTICLES-%: suggest-clean
	@tmp=.config.temp; \
        grep -v CONFIG_PARTICLES $(MAKE_CONFIG_OVERRIDE) > $${tmp}; \
        mv $${tmp} $(MAKE_CONFIG_OVERRIDE); \
        echo "CONFIG_PARTICLES = $*" >> $(MAKE_CONFIG_OVERRIDE); \
	$(MAKE)  show-config | grep CONFIG_PARTICLES; \
	echo

#-----------------------------------------------------------------------

VALID_IO = io-32 io-64
.PHONY: $(VALID_IO)

io-32: CONFIG_IO-32
io-64: CONFIG_IO-64
io-%:
	@printf "\n\tInvalid target: $@\n\n\tValid targets: [$(VALID_IO)]\n\n"
CONFIG_IO-%: suggest-clean
	@tmp=.config.temp; \
        grep -v CONFIG_IO $(MAKE_CONFIG_OVERRIDE) > $${tmp}; \
        mv $${tmp} $(MAKE_CONFIG_OVERRIDE); \
        echo "CONFIG_IO = $*" >> $(MAKE_CONFIG_OVERRIDE); \
	$(MAKE)  show-config | grep CONFIG_IO; \
	echo

#-----------------------------------------------------------------------

VALID_USE-MPI = use-mpi-yes use-mpi-no
.PHONY: $(VALID_USE-MPI)

use-mpi-yes: CONFIG_USE-MPI-yes
use-mpi-no: CONFIG_USE-MPI-no
use-mpi-%:
	@printf "\n\tInvalid target: $@\n\n\tValid targets: [$(VALID_USE-MPI)]\n\n"
CONFIG_USE-MPI-%: suggest-clean
	@tmp=.config.temp; \
        grep -v CONFIG_USE_MPI $(MAKE_CONFIG_OVERRIDE) > $${tmp}; \
        mv $${tmp} $(MAKE_CONFIG_OVERRIDE); \
        echo "CONFIG_USE_MPI = $*" >> $(MAKE_CONFIG_OVERRIDE); \
	$(MAKE)  show-config | grep CONFIG_USE_MPI; \
	echo

#-----------------------------------------------------------------------

VALID_OPT = opt-warn opt-debug opt-cudadebug opt-high opt-aggressive
.PHONY: $(VALID_OPT)

opt-warn:       CONFIG_OPT-warn
opt-debug:      CONFIG_OPT-debug
opt-cudadebug:  CONFIG_OPT-cudadebug
opt-high:       CONFIG_OPT-high
opt-aggressive: CONFIG_OPT-aggressive
opt-%:
	@printf "\n\tInvalid target: $@\n\n\tValid targets: [$(VALID_OPT)]\n\n"
CONFIG_OPT-%: suggest-clean
	@tmp=.config.temp; \
        grep -v CONFIG_OPT $(MAKE_CONFIG_OVERRIDE) > $${tmp}; \
        mv $${tmp} $(MAKE_CONFIG_OVERRIDE); \
        echo "CONFIG_OPT = $*" >> $(MAKE_CONFIG_OVERRIDE); \
	$(MAKE)  show-config | grep CONFIG_OPT; \
	echo

#-----------------------------------------------------------------------
